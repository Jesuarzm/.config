;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Maintaned by https://github.com/rxyhn

;; put path to aesthetic bar config files here ;;
(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/bar")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Launcher Widgets ;;
(defwidget launcher []
	(box :orientation "v" 
		 :space-evenly "true" 
		 :spacing -20
  	(button :class "launcher_icon" 
		   	:onclick "scripts/popup launcher"  "")))

(defpoll cpu-usage :interval "1s" "top -bn 1 | grep 'Cpu(s)' | sed 's/.*, *\\([0-9.]*\\)%* id.*/\\1/'")
(defpoll ram-usage :interval "1s" "free | grep Mem | awk '{print $3/$2 * 100.0}'")
(defpoll disk-usage :interval "1s" "df -h / | awk '/\\// {print $(NF-1)}'")

(defvar system_stats false)
			    
;; Workspaces Widgets ;;
(defwidget workspaces []
	(literal :content workspace))
(deflisten workspace "scripts/workspace")

;; Wifi Widgets ;;
(defwidget wifi []
	(box		:orientation "v"  
				:tooltip wifi-name
	(button		:onclick "scripts/popup wifi" 
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Wifi Widgets ;;
(defwidget bluetooth []
	(box :orientation "v" 
		 
  	(button :class "bluetooth-icon" 
		   	:onclick "scripts/popup bluetooth"  "")))

;; Volume Widgets ;;
(defwidget volum []
	(eventbox :onhover "${eww} update volum=true" 		
			  :onhoverlost "${eww} update volum=false"
	(box      :orientation "v" 	  
			  :space-evenly "false" 
			  :spacing "2"
	(revealer :transition "slideup" 
			  :reveal volum         
			  :duration "550ms"
	(scale    :class "volbar" 	  
			  :value current-volume 
			  :orientation "v"      
			  :flipped true 
			  :tooltip "Volume: ${current-volume}%" 
			  :max 101 
			  :min 0 
			  :onchange "amixer -D pulse sset Master {}%" ))
	(button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volum false)

(defwidget redshift []
  (eventbox :onhover "${eww} update redshift=true"
            :onhoverlost "${eww} update redshift=false"
    (box :orientation "v"
         :space-evenly "false"
         :spacing "2"
      (revealer :transition "slideup"
                :reveal redshift
                :duration "550ms"
        (scale :class "redshiftbar"
               :value current-temp
               :orientation "v"
               :flipped true
               :tooltip "Redshift Temperature: ${current-temp}K"
               :max 6500
               :min 1000
               :onchange "redshift -P -O {}"))
      (button :onclick "scripts/popup redshift"
              :class "redshift-icon"
              ""))))

(defpoll current-temp :interval "1s" "redshift -p 2>/dev/null | awk -F' ' '/temperature:/ {print $2}'")
(defvar redshift false)


;; Control Panel Widgets ;;	
(defwidget control []
	(box :orientation "v" 
		 :space-evenly false  
		 :class "control"
(redshift)
(bluetooth)
(wifi)
(volum)))

;; Clock Widgets ;;
(defwidget time []
	(box	:orientation "v" 
			:class "time" 
			:valign "end"
	(button	:onclick "scripts/popup calendar"	
			:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"	
			:class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widgets ;;
(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" 
			  :day calendar_day 
			  :month calendar_month 
			  :year calendar_year))))
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"	
				:onhoverlost "${eww} update power=false" 
	(box		:orientation "v"					
				:space-evenly "false" 	 
				:vexpand "false" 	
				:class "powermenu"
	(revealer	:transition "slideup"				
				:reveal power			 
				:duration "550ms"
	(box		:orientation "v"					
				:space-evenly "false"

	(button   	:class "button-bspres"  			
				:tooltip "BSPWM Restart" 
				:onclick "bspc wm -r" "" )

  	(button		:class "button-reb"					
	  			:tooltip "Reboot"		 
				:onclick "reboot"	"")

	(button		:class "button-quit" 				
				:tooltip "Logout" 		 
				:onclick "killall bspwm" "")

	(button		:class "button-lock" 				
				:tooltip "Lock Screen"	 
				:onclick "betterlockscreen -l"	"")))

	(button		:class "button-off"					
				:tooltip "Shutdown"		 
				:onclick "shutdown now"	""))))
(defvar power false)

;; Top Widgets ;;
(defwidget top []
	(box	:orientation "v" 
			:space-evenly "false" 
			:valign "start" 
(launcher)
(workspaces)))


;; Bottom Widgets ;;
(defwidget bottom []
	(box	:orientation "v" 
			:space-evenly false 
(time)
(power)))


;; End Widgets ;;
(defwidget end []
	(box :orientation "v" 
		 :space-evenly "false" 
		 :valign "end" 
		 :spacing 10
(control)
(bottom)))

;; Bar Widgets ;;
(defwidget bar []
	(box :class "eww_bar" 
		 :orientation "v" 
		 :vexpand "false" 
		 :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
	:geometry (geometry :x "4" 
						:y "5" 
						:height "99%" 
						:width "40px")
	:monitor 0
	:reserve (struts :distance "60px" 
					 :side "left")
	:wm-ignore false
	:hexpand "true"
	:vexpand "true"
(bar))

;; Calendar Windows ;;
(defwindow calendar
	:geometry (geometry :x "70px" 
						:y "65%" 
						:width "270px" 
						:height "60px")
(cal))
